// <auto-generated />
using System;
using DjurparkGUI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DjurparkGUI.Migrations
{
    [DbContext(typeof(ZooContext))]
    [Migration("20250520121546_LäggTillFavoritDjurRelation")]
    partial class LäggTillFavoritDjurRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DjurparkGUI.Entities.Besök", b =>
                {
                    b.Property<int>("BesökId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BesökId"));

                    b.Property<int>("BesökareId")
                        .HasColumnType("int");

                    b.Property<bool>("Betald")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.HasKey("BesökId");

                    b.HasIndex("BesökareId");

                    b.ToTable("Besök");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Besökare", b =>
                {
                    b.Property<int>("BesökareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BesökareId"));

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ålder")
                        .HasColumnType("int");

                    b.HasKey("BesökareId");

                    b.ToTable("Besökare");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Djur", b =>
                {
                    b.Property<int>("DjurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DjurId"));

                    b.Property<string>("Art")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Födelsedatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("HabitatId")
                        .HasColumnType("int");

                    b.Property<string>("Kön")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Matkostnad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Omvårdnadskostnad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Popularitet")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DjurId");

                    b.HasIndex("HabitatId");

                    b.ToTable("Djur");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.FavoritDjur", b =>
                {
                    b.Property<int>("BesökareId")
                        .HasColumnType("int");

                    b.Property<int>("DjurId")
                        .HasColumnType("int");

                    b.HasKey("BesökareId", "DjurId");

                    b.HasIndex("DjurId");

                    b.ToTable("FavoritDjur");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Habitat", b =>
                {
                    b.Property<int>("HabitatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabitatId"));

                    b.Property<string>("Klimat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Växtlighet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HabitatId");

                    b.ToTable("Habitats");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Settings", b =>
                {
                    b.Property<int>("SettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingsId"));

                    b.Property<decimal>("EntréPris")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxAntalBesökare")
                        .HasColumnType("int");

                    b.HasKey("SettingsId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Besök", b =>
                {
                    b.HasOne("DjurparkGUI.Entities.Besökare", "Besökare")
                        .WithMany("Besök")
                        .HasForeignKey("BesökareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Besökare");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Djur", b =>
                {
                    b.HasOne("DjurparkGUI.Entities.Habitat", "Habitat")
                        .WithMany("Djur")
                        .HasForeignKey("HabitatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitat");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.FavoritDjur", b =>
                {
                    b.HasOne("DjurparkGUI.Entities.Besökare", "Besökare")
                        .WithMany("FavoritDjur")
                        .HasForeignKey("BesökareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DjurparkGUI.Entities.Djur", "Djur")
                        .WithMany("GillasAvBesökare")
                        .HasForeignKey("DjurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Besökare");

                    b.Navigation("Djur");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Besökare", b =>
                {
                    b.Navigation("Besök");

                    b.Navigation("FavoritDjur");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Djur", b =>
                {
                    b.Navigation("GillasAvBesökare");
                });

            modelBuilder.Entity("DjurparkGUI.Entities.Habitat", b =>
                {
                    b.Navigation("Djur");
                });
#pragma warning restore 612, 618
        }
    }
}
